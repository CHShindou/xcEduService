<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xuecheng.manage_course.dao.CourseMapper">

    <select id="findAllCourseBase" resultType="com.xuecheng.framework.domain.course.CourseBase">
        select * from course_base
    </select>

    <select id="findCourseBaseById" parameterType="java.lang.String"
            resultType="com.xuecheng.framework.domain.course.CourseBase">
        select * from course_base where id = #{id}
    </select>


    <resultMap id="teachplanMap" type="com.xuecheng.framework.domain.course.ext.TeachplanNode">
        <id property="id" column="one_id"/>
        <result property="pname" column="one_name"/>
        <collection property="children" ofType="com.xuecheng.framework.domain.course.ext.TeachplanNode">
            <id property="id" column="two_id"/>
            <result property="pname" column="two_name"/>
            <collection property="children" ofType="com.xuecheng.framework.domain.course.ext.TeachplanNode">
                <id property="id" column="three_id"/>
                <result property="pname" column="three_name"/>
            </collection>
        </collection>
    </resultMap>

    <select id="findTeachPlanTree" parameterType="java.lang.String"
            resultMap="teachplanMap">
        select
          a.id one_id,
          a.pname one_name,
          b.id two_id,
          b.pname two_name,
          c.id three_id,
          c.pname three_name
        from
          teachplan a
          left join teachplan b on b.parentid=a.id
          left join teachplan c on c.parentid=b.id
        where
          a.parentid='0'
        <if test="_parameter!=null and _parameter!=''">
                and a.courseid = #{courseid}
        </if>
        order by a.orderby,b.orderby,c.orderby
    </select>

    <select id="findCourseInfo" resultType="com.xuecheng.framework.domain.course.ext.CourseInfo"
        parameterType="com.xuecheng.framework.domain.course.request.CourseListRequest">
        SELECT
            course_base.*,
            (SELECT pic FROM course_pic WHERE courseid = course_base.id) pic
        FROM
            course_base
    </select>


    <resultMap id="categoryMap" type="com.xuecheng.framework.domain.course.ext.CategoryNode">
        <id property="id" column="a_id"/>
        <result property="name" column="a_name"/>
        <result property="label" column="a_label"/>
        <collection property="children" ofType="com.xuecheng.framework.domain.course.ext.CategoryNode">
            <id property="id" column="b_id"/>
            <result property="name" column="b_name"/>
            <result property="label" column="b_label"/>
            <collection property="children" ofType="com.xuecheng.framework.domain.course.ext.CategoryNode">
                <id property="id" column="c_id"/>
                <result property="name" column="c_name"/>
                <result property="label" column="c_label"/>
            </collection>
        </collection>
    </resultMap>
    <select id="findCategoryList" resultMap="categoryMap">
        select
            a.id a_id,a.name a_name,a.label a_label,
            b.id b_id,b.name b_name,b.label b_label,
            c.id c_id,c.name c_name,c.label c_label
        from category a
            left join category b on b.parentid=a.id
            left join category c on c.parentid=b.id
        where a.id = "1"
    </select>
</mapper>